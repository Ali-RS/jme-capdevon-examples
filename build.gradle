/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
	id 'application'
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

description = 'prototypical JMonkeyEngine application'

//// select one source-code (JDK) option
//sourceCompatibility = '1.6'
//sourceCompatibility = '1.7'
sourceCompatibility = '1.8'

//targetCompatibility = '1.6'
//targetCompatibility = '1.7'
targetCompatibility = '1.8'

// select one version of the Engine
//ext.jmonkeyengineVersion = '3.1.0-stable' // from jCenter
//ext.jmonkeyengineVersion = '3.2.0-stable' // from jCenter
//ext.jmonkeyengineVersion = '3.2.1-stable' // from jCenter
//ext.jmonkeyengineVersion = '3.2.2-stable' // from jCenter
//ext.jmonkeyengineVersion = '3.2.3-stable' // from jCenter
ext.jmonkeyengineVersion = '3.2.4-stable' // from jCenter
//ext.jmonkeyengineVersion = '3.3.0-alpha5' // from jCenter
//ext.jmonkeyengineVersion = '3.3.0-beta1' // from jCenter
//ext.jmonkeyengineVersion = '3.3.0-beta2' // from jCenter
//ext.jmonkeyengineVersion = '3.4.0-SNAPSHOT' // from mavenLocal

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) { // compile-time options:
        options.compilerArgs << '-Xdiags:verbose'
        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true
        options.encoding = 'UTF-8'
    }
    tasks.withType(JavaExec) { // runtime options:
        args = []
        classpath sourceSets.main.runtimeClasspath
        //debug true
        enableAssertions true
        //jvmArgs '-verbose:gc'
        //jvmArgs '-Xbatch'
        //jvmArgs '-Xms512m', '-Xmx512m'
        //jvmArgs '-XX:+PrintCompilation'
        //jvmArgs '-XX:+UseConcMarkSweepGC'
        jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
    }
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    //maven { url 'http://nifty-gui.sourceforge.net/nifty-maven-repo' }
    maven { url 'https://dl.bintray.com/stephengold/org.jmonkeyengine' }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // You can read more about how to add dependencies here:
    //   https://docs.gradle.org/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies

    // from jcenter (or mavenLocal) repositories:
    implementation 'org.jmonkeyengine:jme3-core:' + jmonkeyengineVersion
    implementation 'org.jmonkeyengine:jme3-bullet:' + jmonkeyengineVersion
    runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:' + jmonkeyengineVersion
    implementation 'org.jmonkeyengine:jme3-desktop:' + jmonkeyengineVersion
    //implementation 'org.jmonkeyengine:jme3-effects:' + jmonkeyengineVersion
    //implementation 'org.jmonkeyengine:jme3-jogl:' + jmonkeyengineVersion
    //implementation 'org.jmonkeyengine:jme3-networking:' + jmonkeyengineVersion
    //implementation 'org.jmonkeyengine:jme3-niftygui:' + jmonkeyengineVersion
    //implementation 'org.jmonkeyengine:jme3-terrain:' + jmonkeyengineVersion

    // select one version of LWJGL (from jCenter or mavenLocal)
    //runtimeOnly 'org.jmonkeyengine:jme3-lwjgl:' + jmonkeyengineVersion  // LWJGL 2.x
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jmonkeyengineVersion // LWJGL 3.x

    // BasicGame doesn't use jme3-blender, jme3-jogg, or jme3-plugins
    //  -- they are added solely to avoid warnings from AssetConfig
    runtimeOnly 'org.jmonkeyengine:jme3-blender:' + jmonkeyengineVersion
    runtimeOnly 'org.jmonkeyengine:jme3-jogg:' + jmonkeyengineVersion
    runtimeOnly 'org.jmonkeyengine:jme3-plugins:' + jmonkeyengineVersion

    // from stephengold's bintray repositories:
    runtimeOnly 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'
    //runtimeOnly 'org.jmonkeyengine:jme3-testdata:3.3.0-alpha2'
}

// cleanup tasks
clean.dependsOn('cleanDLLs', 'cleanDyLibs', 'cleanLogs', 'cleanSOs')
task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanDyLibs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dylib')
}
task cleanLogs(type: Delete) {
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
task cleanSOs(type: Delete) {
    delete fileTree(dir: '.', include: '*.so')
}
